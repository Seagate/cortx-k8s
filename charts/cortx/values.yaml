# Default values for cortx.
# This is a YAML-formatted file.

## -- A name that will partially override cortx.fullname
nameOverride: ""

## -- A name that will fully override cortx.fullname
fullnameOverride: ""

## -- Kubernetes Cluster Domain
clusterDomain: cluster.local

serviceAccount:
  # -- Enable the creation of a ServiceAccount for CORTX pods
  create: true
  # -- The name of the service account to use.
  # If not set and `create` is true, a name is generated using the fullname template
  name: ""
  # -- Custom annotations for the CORTX ServiceAccount
  annotations: {}
  # -- Allow auto mounting of the service account token
  automountServiceAccountToken: false

# Consul chart configuration
# ref: https://github.com/hashicorp/consul-k8s/blob/main/charts/consul/values.yaml
consul:
  # -- Enable installation of the Consul chart
  enabled: true
  ui:
    # -- Enable the Consul UI
    enabled: false
  server:
    containerSecurityContext:
      server:
        # -- Allow extra privileges in Consul server agent containers
        allowPrivilegeEscalation: false
  client:
    containerSecurityContext:
      client:
        # -- Allow extra privileges in Consul client agent containers
        allowPrivilegeEscalation: false

# externalConsul allows configuring an external Consul service
externalConsul:
  endpoints: []
  adminUser: admin
  adminSecretName: consul_admin_secret

# Kafka chart configuration
# ref: https://github.com/bitnami/charts/blob/master/bitnami/kafka/values.yaml
kafka:
  # -- Enable installation of the Kafka chart
  enabled: true
  serviceAccount:
    # -- Enable the creation of a ServiceAccount for Kafka pods
    create: true
    # -- Allow auto mounting of the service account token
    automountServiceAccountToken: false
  containerSecurityContext:
    # -- Allow extra privileges in Kafka containers
    allowPrivilegeEscalation: false
  # -- Enable topic deletion
  deleteTopicEnable: true
  # -- Overridden min.insync.replicas config for the transaction topic
  transactionStateLogMinIsr: 2

  # ZooKeeper chart configuration
  # ref: https://github.com/bitnami/charts/blob/master/bitnami/zookeeper/values.yaml
  zookeeper:
    # -- Enable installation of the Zookeeper chart
    enabled: true
    serviceAccount:
      # -- Enable the creation of a ServiceAccount for Zookeeper pods
      create: true
      # -- Allow auto mounting of the service account token
      automountServiceAccountToken: false
    containerSecurityContext:
      # -- Allow extra privileges in Zookeeper containers
      allowPrivilegeEscalation: false

# externalKafka allows configuring an external Kafka service
externalKafka:
  endpoints: []
  adminUser: admin
  adminSecretName: kafka_admin_secret

# CORTX Hare component configuration
hare:
  hax:
    ports:
      http:
        # -- The port number of the Hax HTTP endpoint.
        port: 22003
        # -- The protocol to configure the Hax HTTP endpoint as. Valid values are `http` or `https`.
        protocol: https
    resources:
      # -- Configure the resource limits for Hax containers. This applies to all Pods that run Hax containers.
      limits:
        cpu: 1000m
        memory: 2Gi
      # -- Configure the requested resources for all Hax containers. This applies to all Pods that run Hax containers.
      requests:
        cpu: 250m
        memory: 128Mi

##
## Imported values from the cortx-configmap Helm Chart. These will be changed.
##
configmap:
  # clusterName is the name of the CORTX cluster
  clusterName: cortx-cluster

  # clusterId is the unique ID number of the CORTX cluster
  clusterId: ""

  # clusterDomain is the domain name of the underlying Kubernetes cluster (default is cluster.local)
  clusterDomain: cluster.local

  ### TODO CORTX-29861 validate current structure
  # clusterStorageSets is a Dictionary of storage sets.
  # e.g.:
  # clusterStorageSets:
  #   storage-set-1:
  #     durability:
  #       sns: 1+0+0
  #       dix: 1+0+0
  #     controlUuid: "bfcb40c12e9f4fa4b924a787886a40b6"
  #     haUuid: "0789bc5f5f544197a5c204ed5d68ab07"
  #     nodes:
  #       ssc-vm-g4-rhev4-0009.colo.seagate.com:
  #         serverUuid: 50b3871d48fa4032bf27a211b4088df7
  #         dataUuid: "8466d0079fd44cd38164d8e31f5cd067"
  #         clientUuid: "6900a455cb634acea727cb01a7ac8e0a"
  #       ssc-vm-g4-rhev4-0010.colo.seagate.com:
  #         serverUuid: "05ceb17b5cdf47538db1bb89ccc247d2"
  #         dataUuid: "eb79cc372c7443cbac768db4313cc0e8"
  #         clientUuid: "6900a455cb634acea727cb01a7ac8e0a"
  # UUIDs are optional and if omitted, will be randomly generated, with
  # the exception of client UUIDs, which will not be configured if omitted.
  clusterStorageSets: {}

  # cortxVersion is a version string representing the CORTX version being
  # installed
  # e.g.:
  # cortxVersion: 2.0.0-624-custom-ci
  cortxVersion: "unknown"

  # cortxStoragePaths allows configuring the location of CORTX filesystem paths
  cortxStoragePaths:
    local: "/etc/cortx"
    log: "/etc/cortx/log"
    config: "/etc/cortx"

  # cortxControl allows configuring CORTX CSM settings
  cortxControl:
    agent:
      resources:
        requests:
          memory: 128Mi
          cpu: 250m
        limits:
          memory: 256Mi
          cpu: 500m

  # cortxMotr allows configuring CORTX MOTR settings
  cortxMotr:
    # An optional multi-line string that contains extra Motr configuration
    # settings. The string may contain template expressions, and is appended to
    # the end of the computed configuration.
    # e.g.:
    # extraConfiguration: |
    #   md_size: 10
    #   group_size: 1
    extraConfiguration: ""
    motr:
      resources:
        requests:
          memory: 1Gi
          cpu: 250m
        limits:
          memory: 2Gi
          cpu: 1000m
    confd:
      resources:
        requests:
          memory: 128Mi
          cpu: 250m
        limits:
          memory: 512Mi
          cpu: 500m

  # cortxSecretName is the name of the Secret mounted in CORTX Pods
  cortxSecretName: "cortx-secret"
  # cortxSecretValues: is a Dictionary of CORTX secret names and values
  cortxSecretValues: {}

##
## Imported values from cortx-platform Helm Chart. These will be changed.
##
platform:
  podSecurityPolicy:
    create: false

  rbacRole:
    create: true

  rbacRoleBinding:
    create: true

  networkPolicy:
    create: false
    cortxControl:
      podAppLabel: cortx-control-pod
    cortxData:
      podNameLabel: cortx-data

##
## Imported values from cortx-control Helm Chart. These will be changed.
##
cortxcontrol:
  enabled: true
  image: ghcr.io/seagate/centos:7
  agent:
    resources:
      requests:
        memory: 128Mi
        cpu: 250m
      limits:
        memory: 256Mi
        cpu: 500m
  service:
    loadbal:
      enabled: true
      type: NodePort
      ports:
        https: 8081
      nodePorts:
        https: ""
  cfgmap:
    mountpath: /etc/cortx/solution
  sslcfgmap:
    mountpath: /etc/cortx/solution/ssl
  machineid:
    mountpath: /etc/cortx/solution/node
    value: ""
  localpathpvc:
    mountpath: /etc/cortx
    requeststoragesize: 1Gi

##
## Imported values from cortx-ha Helm Chart. These will be changed.
##
cortxha:
  enabled: true
  image: ghcr.io/seagate/centos:7
  fault_tolerance:
    resources:
      requests:
        memory: 128Mi
        cpu: 250m
      limits:
        memory: 1Gi
        cpu: 500m
  health_monitor:
    resources:
      requests:
        memory: 128Mi
        cpu: 250m
      limits:
        memory: 1Gi
        cpu: 500m
  k8s_monitor:
    resources:
      requests:
        memory: 128Mi
        cpu: 250m
      limits:
        memory: 1Gi
        cpu: 500m
  cfgmap:
    mountpath: /etc/cortx/solution
  sslcfgmap:
    mountpath: /etc/cortx/solution/ssl
  machineid:
    mountpath: /etc/cortx/solution/node
    value: ""
  localpathpvc:
    mountpath: /etc/cortx
    requeststoragesize: 1Gi

##
## Imported values from cortx-server Helm Chart. These will be changed.
##
cortxserver:
  enabled: true
  image: ghcr.io/seagate/centos:7
  replicas: 3
  rgw:
    resources:
      requests:
        memory: 128Mi
        cpu: 250m
      limits:
        memory: 2Gi
        cpu: 2000m
  cfgmap:
    mountpath: /etc/cortx/solution
  sslcfgmap:
    mountpath: /etc/cortx/solution/ssl
  localpathpvc:
    mountpath: /etc/cortx
    requeststoragesize: 1Gi
    accessmodes:
      - ReadWriteOnce

  authAdmin: cortx-admin
  authUser: cortx-user
  # The below value should match the corresponding key in solution.yaml
  # and is generally not changed by default.
  authSecret: s3_auth_admin_secret
  maxStartTimeout: 240
  # An optional multi-line string that contains extra RGW configuration
  # settings. The string may contain template expressions, and is appended to
  # the end of the computed configuration.
  # e.g.:
  # extraConfiguration: |
  #   thread_pool_size: 10
  #   gc_max_objs: 32
  #   motr_max_rpc_msg_size: 524288
  extraConfiguration: ""

  service:
    type: ClusterIP
    count: 1
    ports:
      http: 80
      https: 443
    nodePorts:
      http: ""
      https: ""

##
## Imported values from cortx-data Helm Chart. These will be changed.
##
cortxdata:
  image: ghcr.io/seagate/centos:7
  replicas: 3
  ## TODO CORTX-29861 Document this new values.yaml parameter
  nodes: []
  # cvgs is an array of container volume groups (CVG).
  # A CVG contains a name, type, an optional array of metadata devices, and 
  # an array of data devices.
  # e.g:
  # cvgs:
  # - name: cvg-01
  #   type: ios
  #   metadataDevices:
  #     - /dev/sdc
  #   dataDevices:
  #     - /dev/sdd
  #     - /dev/sde
  #     - /dev/sdf
  cvgs: []
  storageClassName: local-block-storage
  persistentStorage:
    volumeMode: Block
    accessModes:
    - ReadWriteMany
  motr:
    # -- The number of Motr IO containers per CORTX Data Pod
    # As the number of CVGs increase, this value can be increased to reduce the number of total CORTX Data Pods per Kubernetes Worker Node.
    containerGroupSize: 1
    containerGroupName: c
    resources:
      requests:
        memory: 1Gi
        cpu: 250m
      limits:
        memory: 2Gi
        cpu: 1000m
  confd:
    resources:
      requests:
        memory: 128Mi
        cpu: 250m
      limits:
        memory: 512Mi
        cpu: 500m
  cfgmap:
    mountpath: /etc/cortx/solution
    name: cortx
  sslcfgmap:
    mountpath: /etc/cortx/solution/ssl
    name: cortx-ssl-cert
  localpathpvc:
    mountpath: /etc/cortx
    requeststoragesize: 1Gi
    accessmodes:
      - ReadWriteOnce

##
## Imported values from cortx-client Helm Chart. These will be changed.
##
cortxclient:
  enabled: false
  replicas: 1
  image: ghcr.io/seagate/centos:7
  motr:
    numclientinst: 1
  cfgmap:
    mountpath: /etc/cortx/solution
  sslcfgmap:
    mountpath: /etc/cortx/solution/ssl
  localpathpvc:
    mountpath: /etc/cortx

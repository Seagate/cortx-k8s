{{- if .Values.cortxclient.enabled }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "cortx.client.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels: {{- include "cortx.labels" . | nindent 4 }}
    app.kubernetes.io/component: client
spec:
  podManagementPolicy: Parallel
  serviceName: {{ include "cortx.client.fullname" . }}-headless
  replicas: {{ .Values.cortxclient.replicas }}
  selector:
    matchLabels: {{- include "cortx.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: client
      cortx.io/hax-enabled: "true"
      cortx.io/service-domain: {{ include "cortx.client.serviceDomain" . }}
      cortx.io/service-type: cortx-client
  template:
    metadata:
      labels: {{- include "cortx.labels" . | nindent 8 }}
        app.kubernetes.io/component: client
        cortx.io/hax-enabled: "true"
        cortx.io/service-domain: {{ include "cortx.client.serviceDomain" . }}
        cortx.io/service-type: cortx-client
    spec:
      subdomain: {{ include "cortx.client.fullname" . }}-headless
      serviceAccountName: {{ include "cortx.serviceAccountName" . }}
      volumes:
        - name: cortx-configuration
          configMap:
            name: {{ include "cortx.configmapName" . }}
        - name: cortx-ssl-cert
          configMap:
            name: {{ include "cortx.tls.configmapName" . }}
        - name: {{ .Values.configmap.cortxSecretName }}
          secret:
            secretName: {{ .Values.configmap.cortxSecretName }}
        - name: data
          emptyDir: {}
        - name: scripts
          configMap:
            name: {{ printf "%s-scripts" (include "cortx.client.fullname" .) }}
            defaultMode: 0755
      initContainers:
      - name: cortx-setup
        image: {{ .Values.cortxclient.image }}
        imagePullPolicy: IfNotPresent
        command:
          - /bin/sh
        args:
          - -c
        {{- if eq .Values.cortxclient.image "ghcr.io/seagate/centos:7" }}
          - sleep $(shuf -i 5-10 -n 1)s
        {{- else }}
          - /opt/seagate/cortx/provisioner/bin/cortx_deploy -f /etc/cortx/solution -c yaml:///etc/cortx/cluster.conf
        {{- end }}
        volumeMounts:
          - name: cortx-configuration
            mountPath: {{ .Values.cortxclient.cfgmap.mountpath }}
          - name: cortx-ssl-cert
            mountPath: {{ .Values.cortxclient.sslcfgmap.mountpath }}
          - name: data
            mountPath: {{ .Values.cortxclient.localpathpvc.mountpath }}
          - name: {{ .Values.configmap.cortxSecretName }}
            mountPath: /etc/cortx/solution/secret
            readOnly: true
        env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
      containers:
        - name: cortx-hax
          image: {{ .Values.cortxclient.image }}
          imagePullPolicy: IfNotPresent
          {{- if eq .Values.cortxclient.image "ghcr.io/seagate/centos:7" }}
          command: ["/bin/sleep", "3650d"]
          {{- else }}
          command:
            - /bin/sh
          args:
            - -c
            - /opt/seagate/cortx/hare/bin/hare_setup start --config yaml:///etc/cortx/cluster.conf
          {{- end }}
          volumeMounts:
            - name: cortx-configuration
              mountPath: {{ .Values.cortxclient.cfgmap.mountpath }}
            - name: cortx-ssl-cert
              mountPath: {{ .Values.cortxclient.sslcfgmap.mountpath }}
            - name: data
              mountPath: {{ .Values.cortxclient.localpathpvc.mountpath }}
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          ports:
          - name: hax-http
            containerPort: {{ .Values.hare.hax.ports.http.port | int }}
            protocol: TCP
          - name: hax-tcp
            containerPort: {{ include "cortx.hare.hax.tcpPort" . | int }}
            protocol: TCP
          {{- if .Values.hare.hax.resources }}
          resources: {{- toYaml .Values.hare.hax.resources | nindent 12 }}
          {{- end }}
          securityContext:
            allowPrivilegeEscalation: false
        {{- range $i := until (.Values.cortxclient.motr.numclientinst | int) }}
        - name: {{ printf "cortx-motr-client-%03d" (add 1 $i) }}
          image: {{ $.Values.cortxclient.image }}
          imagePullPolicy: IfNotPresent
          {{- if eq $.Values.cortxclient.image "ghcr.io/seagate/centos:7" }}
          command: ["/bin/sleep", "3650d"]
          {{- else }}
          command:
            - /bin/sh
          args:
            - -c
            - /opt/seagate/cortx/motr/bin/motr_setup start --services client --idx $CLIENT_INDEX --config yaml:///etc/cortx/cluster.conf
          {{- end }}
          volumeMounts:
            - name: cortx-configuration
              mountPath: {{ $.Values.cortxclient.cfgmap.mountpath }}
            - name: cortx-ssl-cert
              mountPath: {{ $.Values.cortxclient.sslcfgmap.mountpath }}
            - name: data
              mountPath: {{ $.Values.cortxclient.localpathpvc.mountpath }}
            - name: scripts
              mountPath: /scripts/motr-env.sh
              subPath: motr-env.sh
          env:
            - name: CLIENT_INDEX
              value: {{ printf "%d" (add 1 $i) | quote }}
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          securityContext:
            allowPrivilegeEscalation: false
        {{- end }}
{{- end }}

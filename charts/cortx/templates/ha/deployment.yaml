{{- if .Values.cortxha.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "cortx.ha.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels: {{- include "cortx.labels" . | nindent 4 }}
    app.kubernetes.io/component: ha
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: ha
  template:
    metadata:
      labels: {{- include "cortx.labels" . | nindent 8 }}
        app.kubernetes.io/component: ha
        {{- if .Values.cortxha.machineid.value }}
        cortx.io/machine-id: {{ .Values.cortxha.machineid.value }}
        {{- end }}
        cortx.io/service-type: cortx-ha
    spec:
      hostname: {{ include "cortx.ha.fullname" . }}-headless
      serviceAccountName: {{ include "cortx.ha.fullname" . }}-monitor
      automountServiceAccountToken: true
      volumes:
        - name: cortx-configuration
          configMap:
            name: {{ include "cortx.configmapName" . }}
        - name: cortx-ssl-cert
          configMap:
            name: {{ include "cortx.tls.configmapName" . }}
        {{- if .Values.cortxha.machineid.value }}
        - name: machine-id
          downwardAPI:
            items:
              - path: "id"
                fieldRef:
                  fieldPath: metadata.labels['cortx.io/machine-id']
        {{- end }}
        - name: local-path-pv
          persistentVolumeClaim:
            claimName: {{ include "cortx.ha.fullname" . }}
        - name: {{ .Values.configmap.cortxSecretName }}
          secret:
            secretName: {{ .Values.configmap.cortxSecretName }}
        {{- if .Values.waitForBackends.enabled }}
        - name: scripts
          configMap:
            name: {{ include "cortx.configmapName" . }}-scripts
            defaultMode: 0755
        {{- end }}
      initContainers:
        {{- if .Values.waitForBackends.enabled }}
        - name: wait-for-backends
          image: {{ include "cortx.waitForBackends.image" . }}
          imagePullPolicy: IfNotPresent
          command:
            - /scripts/wait-for-backends.sh
          volumeMounts:
            - name: scripts
              mountPath: /scripts/wait-for-backends.sh
              subPath: wait-for-backends.sh
        {{- end }}
        {{- if .Values.consul.enabled }}
        - name: wait-for-consul
          image: {{ .Values.cortxcontrol.image }}
          imagePullPolicy: IfNotPresent
          command:
            - /bin/sh
          args:
            - -ec
            - |
              until curl $CONSUL_SERVICE/v1/status/leader 2>/dev/null | grep -E '".+"'; do
                  echo "Waiting for Consul"
                  sleep 5
              done
              echo "Consul is available"
          env:
            - name: CONSUL_SERVICE
              value: {{ printf "http://%s-consul-server:8500" (include "cortx.fullname" .) }}
        {{- end  }}
        {{- if .Values.kafka.enabled }}
        - name: wait-for-kafka
          image: {{ include "cortx.kafka.image" . }}
          imagePullPolicy: IfNotPresent
          command:
            - /bin/sh
          args:
            - -ec
            - |
              echo "Attempting to write a Kafka topic"
              until /opt/bitnami/kafka/bin/kafka-topics.sh \
                  --bootstrap-server ${KAFKA_SERVICE} \
                  --create \
                  --if-not-exists \
                  --topic "${POD_NAME}" \
                  --replication-factor {{ .Values.kafka.replicaCount }} \
                  --partitions {{ .Values.kafka.numPartitions }}; do
                  echo "trying again"
                  sleep 5
              done
              echo "Succesfully wrote a Kafka topic"
              {{- if .Values.kafka.deleteTopicEnable }}
              echo "Attempting to delete the Kafka topic"
              until /opt/bitnami/kafka/bin/kafka-topics.sh \
                  --bootstrap-server ${KAFKA_SERVICE} \
                  --delete \
                  --if-exists \
                  --topic "${POD_NAME}"; do
                  echo "trying again"
                  sleep 5
              done
              echo "Successfully deleted the Kafka topic"
              {{- end }}
              echo "Kafka is available"
          env:
            - name: KAFKA_SERVICE
              value: {{ printf "%s-kafka:%d" (include "cortx.fullname" .) (.Values.kafka.service.ports.client | int64) }}
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
        {{- end  }}
        - name: cortx-setup
          image: {{ .Values.cortxha.image }}
          imagePullPolicy: IfNotPresent
          command:
            - /bin/sh
          {{- if eq .Values.cortxha.image  "ghcr.io/seagate/centos:7" }}
          args:
            - -c
            - sleep $(shuf -i 5-10 -n 1)s
          {{- else }}
          args:
            - -c
            {{- if .Values.cortxha.machineid.value }}
            - /opt/seagate/cortx/provisioner/bin/cortx_deploy -n $MACHINE_ID -f /etc/cortx/solution -c yaml:///etc/cortx/cluster.conf
            {{- else }}
            - /opt/seagate/cortx/provisioner/bin/cortx_deploy -f /etc/cortx/solution -c yaml:///etc/cortx/cluster.conf
            {{- end }}
          {{- end }}
          volumeMounts:
            - name: cortx-configuration
              mountPath: {{ .Values.cortxha.cfgmap.mountpath }}
            - name: cortx-ssl-cert
              mountPath: {{ .Values.cortxha.sslcfgmap.mountpath }}
            {{- if .Values.cortxha.machineid.value }}
            - name: machine-id
              mountPath: {{ .Values.cortxha.machineid.mountpath }}
            {{- end }}
            - name: local-path-pv
              mountPath: {{ .Values.cortxha.localpathpvc.mountpath }}
            - name: {{ .Values.configmap.cortxSecretName }}
              mountPath: /etc/cortx/solution/secret
              readOnly: true
          env:
            - name: MACHINE_ID
              value: {{ printf "%s" .Values.cortxha.machineid.value | quote }}
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: CORTX_PROVISIONER_DEBUG_LEVEL
              value: "DEBUG"
          ports:
          - containerPort: 5050
      containers:
        - name: cortx-ha-fault-tolerance
          image: {{ .Values.cortxha.image }}
          imagePullPolicy: IfNotPresent
          {{- if eq .Values.cortxha.image  "ghcr.io/seagate/centos:7" }}
          command: ["/bin/sleep", "3650d"]
          {{- else }}
          command:
            - /bin/sh
          args:
            - -c
            - /opt/seagate/cortx/ha/bin/ha_start -s fault_tolerance -c yaml:///etc/cortx/cluster.conf
          {{- end }}
          volumeMounts:
            - name: cortx-configuration
              mountPath: {{ .Values.cortxha.cfgmap.mountpath }}
            - name: cortx-ssl-cert
              mountPath: {{ .Values.cortxha.sslcfgmap.mountpath }}
            {{- if .Values.cortxha.machineid.value }}
            - name: machine-id
              mountPath: {{ .Values.cortxha.machineid.mountpath }}
            {{- end }}
            - name: local-path-pv
              mountPath: {{ .Values.cortxha.localpathpvc.mountpath }}
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          {{- if .Values.cortxha.fault_tolerance.resources }}
          resources: {{- toYaml .Values.cortxha.fault_tolerance.resources | nindent 12 }}
          {{- end }}
          securityContext:
            allowPrivilegeEscalation: false
        - name: cortx-ha-health-monitor
          image: {{ .Values.cortxha.image }}
          imagePullPolicy: IfNotPresent
          {{- if eq .Values.cortxha.image  "ghcr.io/seagate/centos:7" }}
          command: ["/bin/sleep", "3650d"]
          {{- else }}
          command:
            - /bin/sh
          args:
            - -c
            - /opt/seagate/cortx/ha/bin/ha_start -s health_monitor -c yaml:///etc/cortx/cluster.conf
          {{- end }}
          volumeMounts:
            - name: cortx-configuration
              mountPath: {{ .Values.cortxha.cfgmap.mountpath }}
            - name: cortx-ssl-cert
              mountPath: {{ .Values.cortxha.sslcfgmap.mountpath }}
            {{- if .Values.cortxha.machineid.value }}
            - name: machine-id
              mountPath: {{ .Values.cortxha.machineid.mountpath }}
            {{- end }}
            - name: local-path-pv
              mountPath: {{ .Values.cortxha.localpathpvc.mountpath }}
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          {{- if .Values.cortxha.health_monitor.resources }}
          resources: {{- toYaml .Values.cortxha.health_monitor.resources | nindent 12 }}
          {{- end }}
          securityContext:
            allowPrivilegeEscalation: false
        - name: cortx-ha-k8s-monitor
          image: {{ .Values.cortxha.image }}
          imagePullPolicy: IfNotPresent
          {{- if eq .Values.cortxha.image  "ghcr.io/seagate/centos:7" }}
          command: ["/bin/sleep", "3650d"]
          {{- else }}
          command:
            - /bin/sh
          args:
            - -c
            - /opt/seagate/cortx/ha/bin/ha_start -s k8s_monitor -c yaml:///etc/cortx/cluster.conf
          {{- end }}
          volumeMounts:
            - name: cortx-configuration
              mountPath: {{ .Values.cortxha.cfgmap.mountpath }}
            - name: cortx-ssl-cert
              mountPath: {{ .Values.cortxha.sslcfgmap.mountpath }}
            {{- if .Values.cortxha.machineid.value }}
            - name: machine-id
              mountPath: {{ .Values.cortxha.machineid.mountpath }}
            {{- end }}
            - name: local-path-pv
              mountPath: {{ .Values.cortxha.localpathpvc.mountpath }}
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          {{- if .Values.cortxha.k8s_monitor.resources }}
          resources: {{- toYaml .Values.cortxha.k8s_monitor.resources | nindent 12 }}
          {{- end }}
          securityContext:
            allowPrivilegeEscalation: false
{{- end }}

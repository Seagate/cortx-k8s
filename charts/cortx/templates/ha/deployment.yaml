{{- if .Values.ha.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "cortx.ha.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels: {{- include "cortx.labels" . | nindent 4 }}
    app.kubernetes.io/component: ha
spec:
  replicas: 1
  selector:
    matchLabels: {{- include "cortx.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: ha
  template:
    metadata:
      labels: {{- include "cortx.labels" . | nindent 8 }}
        app.kubernetes.io/component: ha
        cortx.io/machine-id: {{ printf "%s-headless" (include "cortx.ha.fullname" . ) }}
        cortx.io/service-type: cortx-ha
    spec:
      hostname: {{ include "cortx.ha.fullname" . }}-headless
      serviceAccountName: {{ include "cortx.ha.fullname" . }}-monitor
      automountServiceAccountToken: true
      volumes:
        - name: cortx-configuration
          configMap:
            name: {{ include "cortx.configmapName" . }}
        - name: cortx-ssl-cert
          configMap:
            name: {{ include "cortx.tls.configmapName" . }}
        - name: data
          persistentVolumeClaim:
            claimName: {{ include "cortx.ha.fullname" . }}
        - name: configuration-secrets
          secret:
            secretName: {{ include "cortx.secretName" . }}
      {{- $logFiles := list }}
      {{- $logDetails := include "cortx.setupLoggingDetail" ( dict "component" .Values.ha "root" .) }}
      {{- if has $logDetails (list "component" "all") }}
        {{- $logFiles = list
            "/etc/cortx/log/utils/$TAIL_MACHINE_ID/utils_setup.log"
            "/etc/cortx/log/ha/$TAIL_MACHINE_ID/ha_setup.log"
            "/etc/cortx/log/ha/$TAIL_MACHINE_ID/event_manager.log" }}
      {{- end }}
      {{- $imageContext := dict "image" .Values.ha.image "logFiles" $logFiles "root" . }}
      initContainers:
      {{- include "cortx.containers.setup" $imageContext | nindent 8 }}
      containers:
        {{- $image := include "cortx.ha.image" . }}
        {{- $imagePullPolicy := include "cortx.images.imagePullPolicy" $imageContext }}
        - name: cortx-ha-fault-tolerance
          image: {{ $image }}
          imagePullPolicy: {{ $imagePullPolicy }}
          {{- if eq $image "ghcr.io/seagate/centos:7" }}
          command: ["/bin/sleep", "3650d"]
          {{- else }}
          command:
            - /bin/sh
          args:
            - -c
            - /opt/seagate/cortx/ha/bin/ha_start --services fault_tolerance --config $CORTX_CONFSTORE_URL
          {{- end }}
          volumeMounts:
            - name: cortx-configuration
              mountPath: /etc/cortx/solution
            - name: cortx-ssl-cert
              mountPath: /etc/cortx/solution/ssl
            - name: data
              mountPath: /etc/cortx
          env:
          - name: CORTX_CONFSTORE_URL
            value: {{ include "cortx.confstore.url" . }}
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          {{- if .Values.ha.faultTolerance.resources }}
          resources: {{- toYaml .Values.ha.faultTolerance.resources | nindent 12 }}
          {{- end }}
          securityContext:
            allowPrivilegeEscalation: false
        - name: cortx-ha-health-monitor
          image: {{ $image }}
          imagePullPolicy: {{ $imagePullPolicy }}
          {{- if eq $image "ghcr.io/seagate/centos:7" }}
          command: ["/bin/sleep", "3650d"]
          {{- else }}
          command:
            - /bin/sh
          args:
            - -c
            - /opt/seagate/cortx/ha/bin/ha_start --services health_monitor --config $CORTX_CONFSTORE_URL
          {{- end }}
          volumeMounts:
            - name: cortx-configuration
              mountPath: /etc/cortx/solution
            - name: cortx-ssl-cert
              mountPath: /etc/cortx/solution/ssl
            - name: data
              mountPath: /etc/cortx
          env:
          - name: CORTX_CONFSTORE_URL
            value: {{ include "cortx.confstore.url" . }}
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          {{- if .Values.ha.healthMonitor.resources }}
          resources: {{- toYaml .Values.ha.healthMonitor.resources | nindent 12 }}
          {{- end }}
          securityContext:
            allowPrivilegeEscalation: false
        - name: cortx-ha-k8s-monitor
          image: {{ $image }}
          imagePullPolicy: {{ $imagePullPolicy }}
          {{- if eq $image "ghcr.io/seagate/centos:7" }}
          command: ["/bin/sleep", "3650d"]
          {{- else }}
          command:
            - /bin/sh
          args:
            - -c
            - /opt/seagate/cortx/ha/bin/ha_start --services k8s_monitor --config $CORTX_CONFSTORE_URL
          {{- end }}
          volumeMounts:
            - name: cortx-configuration
              mountPath: /etc/cortx/solution
            - name: cortx-ssl-cert
              mountPath: /etc/cortx/solution/ssl
            - name: data
              mountPath: /etc/cortx
          env:
          - name: CORTX_CONFSTORE_URL
            value: {{ include "cortx.confstore.url" . }}
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          {{- if .Values.ha.k8sMonitor.resources }}
          resources: {{- toYaml .Values.ha.k8sMonitor.resources | nindent 12 }}
          {{- end }}
          securityContext:
            allowPrivilegeEscalation: false
{{- end }}

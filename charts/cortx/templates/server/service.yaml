{{- if .Values.server.enabled }}
{{- $svc := .Values.server.service -}}
{{- $count := ($svc.instanceCount | int) -}}
{{- if gt $count 0 }}
{{- $isLB := eq $svc.type "LoadBalancer" -}}
{{- $nodePortAllowed := or (eq $svc.type "NodePort") $isLB -}}
{{- $count = ternary $count 1 $isLB -}}
{{- $root := . -}}
{{- range $i := until $count -}}
apiVersion: v1
kind: Service
metadata:
  name: {{ printf "%s-%d" (include "cortx.server.fullname" $root) $i }}
  namespace: {{ $root.Release.Namespace }}
  labels: {{- include "cortx.labels" $ | nindent 4 }}
    app.kubernetes.io/component: server
spec:
  type: {{ $svc.type }}
  selector: {{- include "cortx.selectorLabels" $ | nindent 4 }}
    app.kubernetes.io/component: server
    cortx.io/service-type: cortx-server
  ports:
    - name: rgw-http
      protocol: TCP
      port: {{ $svc.ports.http }}
      targetPort: rgw-http
      {{- if and $nodePortAllowed (not (empty $svc.nodePorts.http)) }}
      nodePort: {{ add $svc.nodePorts.http $i }}
      {{- end }}
    - name: rgw-https
      protocol: TCP
      port: {{ $svc.ports.https }}
      targetPort: rgw-https
      {{- if and $nodePortAllowed (not (empty $svc.nodePorts.https)) }}
      nodePort: {{ add $svc.nodePorts.https $i }}
      {{- end }}
---
{{- end }}
{{- end }}
{{- end }}

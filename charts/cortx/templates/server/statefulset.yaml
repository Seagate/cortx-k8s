{{- if .Values.cortxserver.enabled }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "cortx.server.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels: {{- include "cortx.labels" . | nindent 4 }}
    app.kubernetes.io/component: server
spec:
  podManagementPolicy: Parallel
  serviceName: {{ include "cortx.server.fullname" . }}-headless
  replicas: {{ .Values.cortxserver.replicas }}
  selector:
    matchLabels: {{- include "cortx.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: server
      cortx.io/hax-enabled: "true"
      cortx.io/service-domain: {{ include "cortx.server.serviceDomain" . }}
      cortx.io/service-type: cortx-server
  template:
    metadata:
      labels: {{- include "cortx.labels" . | nindent 8 }}
        app.kubernetes.io/component: server
        cortx.io/hax-enabled: "true"
        cortx.io/service-domain: {{ include "cortx.server.serviceDomain" . }}
        cortx.io/service-type: cortx-server
    spec:
      subdomain: {{ include "cortx.server.fullname" . }}-headless
      serviceAccountName: {{ include "cortx.serviceAccountName" . }}
      volumes:
        - name: cortx-configuration
          configMap:
            name: {{ include "cortx.configmapName" . }}
        - name: cortx-ssl-cert
          configMap:
            name: {{ include "cortx.tls.configmapName" . }}
        - name: {{ .Values.configmap.cortxSecretName }}
          secret:
            secretName: {{ .Values.configmap.cortxSecretName }}
      initContainers:
      - name: cortx-setup
        image: {{ .Values.cortxserver.image }}
        imagePullPolicy: IfNotPresent
        command:
          - /bin/sh
        args:
          - -c
          {{- if eq .Values.cortxserver.image "ghcr.io/seagate/centos:7" }}
          - sleep $(shuf -i 5-10 -n 1)s
          {{- else }}
          - /opt/seagate/cortx/provisioner/bin/cortx_deploy -f /etc/cortx/solution -c yaml:///etc/cortx/cluster.conf;
          {{- end }}
        volumeMounts:
          - name: cortx-configuration
            mountPath: {{ .Values.cortxserver.cfgmap.mountpath }}
          - name: cortx-ssl-cert
            mountPath: {{ .Values.cortxserver.sslcfgmap.mountpath }}
          - name: data
            mountPath: {{ .Values.cortxserver.localpathpvc.mountpath }}
          - name: {{ .Values.configmap.cortxSecretName }}
            mountPath: /etc/cortx/solution/secret
            readOnly: true
        env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
        ports:
        - containerPort: 5050
      containers:
        - name: cortx-rgw
          image: {{ .Values.cortxserver.image }}
          imagePullPolicy: IfNotPresent
          {{- if eq .Values.cortxserver.image  "ghcr.io/seagate/centos:7" }}
          command: ["/bin/sleep", "3650d"]
          {{- else }}
          command:
            - /bin/sh
          args:
            - -c
            - /opt/seagate/cortx/rgw/bin/rgw_setup start -c yaml:///etc/cortx/cluster.conf;
          {{- end }}
          volumeMounts:
            - name: cortx-configuration
              mountPath: {{ .Values.cortxserver.cfgmap.mountpath }}
            - name: cortx-ssl-cert
              mountPath: {{ .Values.cortxserver.sslcfgmap.mountpath }}
            - name: data
              mountPath: {{ .Values.cortxserver.localpathpvc.mountpath }}
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          ports:
          - name: rgw-http
            containerPort: 22751
            protocol: TCP
          - name: rgw-https
            containerPort: 23001
            protocol: TCP
          resources: {{- toYaml .Values.cortxserver.rgw.resources | nindent 12 }}
          securityContext:
            allowPrivilegeEscalation: false
        - name: cortx-hax
          image: {{ .Values.cortxserver.image }}
          imagePullPolicy: IfNotPresent
          {{- if eq .Values.cortxserver.image  "ghcr.io/seagate/centos:7" }}
          command: ["/bin/sleep", "3650d"]
          {{- else }}
          command:
            - /bin/sh
          args:
            - -c
            - /opt/seagate/cortx/hare/bin/hare_setup start --config yaml:///etc/cortx/cluster.conf;
          {{- end }}
          volumeMounts:
            - name: cortx-configuration
              mountPath: {{ .Values.cortxserver.cfgmap.mountpath }}
            - name: cortx-ssl-cert
              mountPath: {{ .Values.cortxserver.sslcfgmap.mountpath }}
            - name: data
              mountPath: {{ .Values.cortxserver.localpathpvc.mountpath }}
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          ports:
          - name: hax
            containerPort: {{ .Values.cortxserver.hax.port | int }}
            protocol: TCP
          {{- if .Values.cortxserver.hax.resources }}
          resources: {{- toYaml .Values.cortxserver.hax.resources | nindent 12 }}
          {{- end }}
          securityContext:
            allowPrivilegeEscalation: false
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: {{- toYaml .Values.cortxserver.localpathpvc.accessmodes | nindent 6 }}
      storageClassName: local-path
      resources:
        requests:
          storage: {{ .Values.cortxserver.localpathpvc.requeststoragesize }}
{{- end }}

{{- if .Values.server.enabled }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "cortx.server.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels: {{- include "cortx.labels" . | nindent 4 }}
    app.kubernetes.io/component: server
spec:
  podManagementPolicy: Parallel
  serviceName: {{ include "cortx.server.fullname" . }}-headless
  replicas: {{ .Values.server.replicaCount }}
  selector:
    matchLabels: {{- include "cortx.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: server
      cortx.io/hax-enabled: "true"
      cortx.io/service-domain: {{ include "cortx.server.serviceDomain" . }}
      cortx.io/service-type: cortx-server
  template:
    metadata:
      labels: {{- include "cortx.labels" . | nindent 8 }}
        app.kubernetes.io/component: server
        cortx.io/hax-enabled: "true"
        cortx.io/service-domain: {{ include "cortx.server.serviceDomain" . }}
        cortx.io/service-type: cortx-server
    spec:
      subdomain: {{ include "cortx.server.fullname" . }}-headless
      serviceAccountName: {{ include "cortx.serviceAccountName" . }}
      volumes:
        - name: cortx-configuration
          configMap:
            name: {{ include "cortx.configmapName" . }}
        - name: cortx-ssl-cert
          configMap:
            name: {{ include "cortx.tls.configmapName" . }}
        - name: configuration-secrets
          secret:
            secretName: {{ include "cortx.secretName" . }}
      initContainers:
        {{- include "cortx.containers.setup" (dict "image" .Values.server.image "root" . ) | nindent 8 }}
      containers:
        {{- include "cortx.containers.hax" (dict "image" .Values.server.image "root" . ) | nindent 8 }}
        - name: cortx-rgw
          {{- $image := include "cortx.server.image" . }}
          image: {{ $image }}
          imagePullPolicy: {{ .Values.server.image.pullPolicy | quote }}
          {{- if eq $image "ghcr.io/seagate/centos:7" }}
          command: ["/bin/sleep", "3650d"]
          {{- else }}
          command:
            - /bin/sh
          args:
            - -c
            - /opt/seagate/cortx/rgw/bin/rgw_setup start --config $CONFSTORE_URL
          {{- end }}
          volumeMounts:
            - name: cortx-configuration
              mountPath: /etc/cortx/solution
            - name: cortx-ssl-cert
              mountPath: /etc/cortx/solution/ssl
            - name: data
              mountPath: /etc/cortx
          env:
            - name: CONFSTORE_URL
              value: {{ include "cortx.confstore.url" . }}
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          ports:
            - name: rgw-http
              containerPort: {{ include "cortx.server.rgwHttpPort" . | int }}
              protocol: TCP
            - name: rgw-https
              containerPort: {{ include "cortx.server.rgwHttpsPort" . | int }}
              protocol: TCP
            - name: motr-client
              containerPort: {{ include "cortx.server.motrClientPort" . | int }}
              protocol: TCP
          resources: {{- toYaml .Values.server.rgw.resources | nindent 12 }}
          securityContext:
            allowPrivilegeEscalation: false
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: {{- toYaml .Values.server.persistence.accessModes | nindent 6 }}
      storageClassName: local-path
      resources:
        requests:
          storage: {{ .Values.server.persistence.size }}
{{- end }}

apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.cortxserver.service.headless.name }}
  namespace: {{ .Values.namespace }}
  labels:
    cortx.io/service-type: {{ .Values.cortxserver.serviceType }}
spec:
  publishNotReadyAddresses: true
  clusterIP: None
  selector:
    app: {{ .Values.cortxserver.name }}
    cortx.io/service-type:  {{ .Values.cortxserver.serviceType }}
---    
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: {{ .Values.cortxserver.name }}
    cortx.io/service-type:  {{ .Values.cortxserver.serviceType }}
  name: {{ .Values.cortxserver.name }}
  namespace: {{ .Values.namespace }}
spec:
  podManagementPolicy: Parallel
  serviceName: {{ .Values.cortxserver.service.headless.name }}
  replicas: {{ .Values.cortxserver.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.cortxserver.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.cortxserver.name }}
        name: cortx-server
        cortx.io/service-type: cortx-server
        cortx.io/hax-enabled: "true"
    spec:
      #hostname: {{ .Values.cortxserver.service.headless.name }}
      serviceAccountName: {{ .Values.cortxserver.serviceaccountname }}
      volumes:
        - name: {{ .Values.cortxserver.cfgmap.volmountname }}
          configMap:
            name: {{ .Values.cortxserver.cfgmap.name }}
        - name: {{ .Values.cortxserver.sslcfgmap.volmountname }}
          configMap:
            name: {{ .Values.cortxserver.sslcfgmap.name }}
        - name: machine-id
          downwardAPI:
            items:
              - path: "id"
                fieldRef:
                  fieldPath: metadata.name
        - name: local-path-pv
          emptyDir: {}
          # TODO CORTX-28968 Evaluate as volumeClaimTemplate as well
          #persistentVolumeClaim:
          #  claimName: {{ .Values.cortxserver.localpathpvc.name }}
        {{- range .Files.Lines .Values.cortxserver.secretinfo }}
        ## TODO CORTX-28968 Revisit to remove this loop
        - name: {{ printf "%s" . }}
          secret:
            secretName: {{ printf "%s" . }}
        {{- end }}
      initContainers:
      - name: cortx-setup
        image: {{ .Values.cortxserver.image }}
        imagePullPolicy: IfNotPresent
        command:
          - /bin/sh
        {{- if eq .Values.cortxserver.image "ghcr.io/seagate/centos:7" }}
        args:
          - -c
          - sleep $(shuf -i 5-10 -n 1)s
        {{- else }}
        args:
          - -c
          {{- if .Values.cortxserver.machineid.value }}
          - /opt/seagate/cortx/provisioner/bin/cortx_deploy -n $MACHINE_ID -f /etc/cortx/solution -c yaml:///etc/cortx/cluster.conf;
          {{- else }}
          - /opt/seagate/cortx/provisioner/bin/cortx_deploy -f /etc/cortx/solution -c yaml:///etc/cortx/cluster.conf;
          {{- end }}
        {{- end }}
        volumeMounts:
          - name: {{ .Values.cortxserver.cfgmap.volmountname }}
            mountPath: {{ .Values.cortxserver.cfgmap.mountpath }}
          - name: {{ .Values.cortxserver.sslcfgmap.volmountname }}
            mountPath: {{ .Values.cortxserver.sslcfgmap.mountpath }}
          - name: machine-id
            mountPath: {{ .Values.cortxserver.machineid.mountpath }}
          - name: local-path-pv
            mountPath: {{ .Values.cortxserver.localpathpvc.mountpath }}
          {{- range .Files.Lines .Values.cortxserver.secretinfo }}
          ## TODO CORTX-28968 Revisit to remove this loop
          - name: {{ printf "%s" . }}
            mountPath: /etc/cortx/solution/secret
            readOnly: true
          {{- end }}
        env:
          ## TODO CORTX-28968 ARE BOTH MOUNT AND ENV VAR NEEDED FOR MACHINE_ID IN INIT CONTAINER?
          - name: MACHINE_ID
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
        ports:
        - containerPort: 5050
      containers:
        - name: cortx-rgw
          image: {{ .Values.cortxserver.image }}
          imagePullPolicy: IfNotPresent
          {{- if eq .Values.cortxserver.image  "ghcr.io/seagate/centos:7" }}
          command: ["/bin/sleep", "3650d"]
          {{- else }}
          command:
            - /bin/sh
          args:
            - -c
            - /opt/seagate/cortx/rgw/bin/rgw_setup start -c yaml:///etc/cortx/cluster.conf;
          {{- end }}
          volumeMounts:
            - name: {{ .Values.cortxserver.cfgmap.volmountname }}
              mountPath: {{ .Values.cortxserver.cfgmap.mountpath }}
            - name: {{ .Values.cortxserver.sslcfgmap.volmountname }}
              mountPath: {{ .Values.cortxserver.sslcfgmap.mountpath }}
            - name: machine-id
              mountPath: {{ .Values.cortxserver.machineid.mountpath }}
            - name: local-path-pv
              mountPath: {{ .Values.cortxserver.localpathpvc.mountpath }}
          ports:
          - name: rgw-http
            containerPort: 22751
            protocol: TCP
          - name: rgw-https
            containerPort: 23001
            protocol: TCP
          securityContext:
            allowPrivilegeEscalation: false
        - name: cortx-hax
          image: {{ .Values.cortxserver.image }}
          imagePullPolicy: IfNotPresent
          {{- if eq .Values.cortxserver.image  "ghcr.io/seagate/centos:7" }}
          command: ["/bin/sleep", "3650d"]
          {{- else }}
          command:
            - /bin/sh
          args:
            - -c
            - /opt/seagate/cortx/hare/bin/hare_setup start --config yaml:///etc/cortx/cluster.conf;
          {{- end }}
          volumeMounts:
            - name: {{ .Values.cortxserver.cfgmap.volmountname }}
              mountPath: {{ .Values.cortxserver.cfgmap.mountpath }}
            - name: {{ .Values.cortxserver.sslcfgmap.volmountname }}
              mountPath: {{ .Values.cortxserver.sslcfgmap.mountpath }}
            - name: machine-id
              mountPath: {{ .Values.cortxserver.machineid.mountpath }}
            - name: local-path-pv
              mountPath: {{ .Values.cortxserver.localpathpvc.mountpath }}
          ports:
          - name: hax
            containerPort: {{ .Values.cortxserver.hax.port | int }}
            protocol: TCP
          securityContext:
            allowPrivilegeEscalation: false

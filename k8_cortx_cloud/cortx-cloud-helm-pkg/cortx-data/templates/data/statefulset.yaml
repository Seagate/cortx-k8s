{{- define "cortx_data.device_path.to_string" }}
{{- . | lower | trimPrefix "/" | replace "/" "-" }}
{{- end }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: {{ quote .Values.cortxdata.name }}
    cortx.io/service-type:  {{ quote .Values.cortxdata.serviceType }}
  name: {{ .Values.cortxdata.name }}
  namespace: {{ .Release.Namespace }}
spec:
  podManagementPolicy: Parallel
  serviceName: {{ .Values.cortxdata.service.headless.name }}
  replicas: {{ .Values.cortxdata.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.cortxdata.name }}
      cortx.io/service-type: {{ quote .Values.cortxdata.serviceType }}
      cortx.io/hax-enabled: "true"
      cortx.io/service-domain: "{{ .Values.cortxdata.service.headless.name }}.{{ .Release.Namespace }}.svc.{{ .Values.clusterdomain }}"
  template:
    metadata:
      labels:
        app: {{ quote .Values.cortxdata.name }}
        ### TODO k8s Label 'name: cortx-data' is deprecated in favor of 'cortx.io/service-type: cortx-data'
        name: cortx-data
        cortx.io/service-type: {{ quote .Values.cortxdata.serviceType }}
        cortx.io/hax-enabled: "true"
        cortx.io/service-domain: "{{ .Values.cortxdata.service.headless.name }}.{{ .Release.Namespace }}.svc.{{ .Values.clusterdomain }}"
    spec:
      subdomain: {{ .Values.cortxdata.service.headless.name }}
      serviceAccountName: {{ .Values.cortxdata.serviceaccountname }}
      volumes:
        - name: {{ .Values.cortxdata.cfgmap.volmountname }}
          configMap:
            name: {{ .Values.cortxdata.cfgmap.name }}
        - name: {{ .Values.cortxdata.sslcfgmap.volmountname }}
          configMap:
            name: {{ .Values.cortxdata.sslcfgmap.name }}
        - name: {{ .Values.cortxdata.secretname }}
          secret:
            secretName: {{ .Values.cortxdata.secretname }}
        - name: {{ .Values.cortxdata.name }}-node-config
          configMap:
            defaultMode: 0700
            name: {{ .Values.cortxdata.name }}-node-config
      initContainers:
      - name: node-config
        image: {{ .Values.cortxdata.image }}
        imagePullPolicy: IfNotPresent
        command:
          - /nodeconfig/entrypoint.sh
        volumeMounts:
        - name: {{ .Values.cortxdata.name }}-node-config
          mountPath: /nodeconfig
          readOnly: true
        securityContext:
          privileged: true
      - name: cortx-setup
        image: {{ .Values.cortxdata.image }}
        imagePullPolicy: IfNotPresent
        command:
          - /bin/sh
        {{- if eq .Values.cortxdata.image  "ghcr.io/seagate/centos:7" }}
        args:
          - -c
          - sleep $(shuf -i 5-10 -n 1)s
        {{- else }}
        args:
          - -c
          - /opt/seagate/cortx/provisioner/bin/cortx_deploy -f /etc/cortx/solution -c yaml:///etc/cortx/cluster.conf
        {{- end }}
        volumeDevices:
          {{- range .Values.cortxdata.blockDevicePaths }}
          - name: {{ printf "block-%s" ( include "cortx_data.device_path.to_string" .device ) }}
            devicePath: {{ .device | quote }}
          {{- end }}
        volumeMounts:
          - name: {{ .Values.cortxdata.cfgmap.volmountname }}
            mountPath: {{ .Values.cortxdata.cfgmap.mountpath }}
          - name: {{ .Values.cortxdata.sslcfgmap.volmountname }}
            mountPath: {{ .Values.cortxdata.sslcfgmap.mountpath }}
          - name: data
            mountPath: {{ .Values.cortxdata.localpathpvc.mountpath }}
          - name: {{ .Values.cortxdata.secretname }}
            mountPath: /etc/cortx/solution/secret
            readOnly: true
        env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
        ports:
        - containerPort: 5050
      containers:
        - name: cortx-hax
          image: {{ .Values.cortxdata.image }}
          imagePullPolicy: IfNotPresent
          {{- if eq .Values.cortxdata.image  "ghcr.io/seagate/centos:7" }}
          command: ["/bin/sleep", "3650d"]
          {{- else }}
          command:
            - /bin/sh
          args:
            - -c
            - /opt/seagate/cortx/hare/bin/hare_setup start --config yaml:///etc/cortx/cluster.conf
          {{- end }}
          volumeMounts:
            - name: {{ .Values.cortxdata.cfgmap.volmountname }}
              mountPath: {{ .Values.cortxdata.cfgmap.mountpath }}
            - name: {{ .Values.cortxdata.sslcfgmap.volmountname }}
              mountPath: {{ .Values.cortxdata.sslcfgmap.mountpath }}
            - name: data
              mountPath: {{ .Values.cortxdata.localpathpvc.mountpath }}
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          ports:
          - name: hax
            containerPort: {{ .Values.cortxdata.hax.port }}
            protocol: TCP
          {{- if .Values.cortxdata.hax.resources }}
          resources: {{- toYaml .Values.cortxdata.hax.resources | nindent 12 }}
          {{- end }}
          securityContext:
            allowPrivilegeEscalation: false
        - name: cortx-motr-confd
          image: {{ .Values.cortxdata.image }}
          imagePullPolicy: IfNotPresent
          {{- if eq .Values.cortxdata.image  "ghcr.io/seagate/centos:7" }}
          command: ["/bin/sleep", "3650d"]
          {{- else }}
          command:
            - /bin/sh
          args:
            - -c
            - /opt/seagate/cortx/motr/bin/motr_setup start --services confd --config yaml:///etc/cortx/cluster.conf
          {{- end }}
          volumeDevices:
            {{- range .Values.cortxdata.blockDevicePaths }}
            - name: {{ printf "block-%s" ( include "cortx_data.device_path.to_string" .device ) }}
              devicePath: {{ .device | quote }}
            {{- end }}
          volumeMounts:
            - name: {{ .Values.cortxdata.cfgmap.volmountname }}
              mountPath: {{ .Values.cortxdata.cfgmap.mountpath }}
            - name: {{ .Values.cortxdata.sslcfgmap.volmountname }}
              mountPath: {{ .Values.cortxdata.sslcfgmap.mountpath }}
            - name: data
              mountPath: {{ .Values.cortxdata.localpathpvc.mountpath }}
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          ports:
          - containerPort: {{ printf "%d" (add .Values.cortxdata.motr.numiosinst .Values.cortxdata.motr.startportnum) }}
          {{- if .Values.cortxdata.confd.resources }}
          resources: {{- toYaml .Values.cortxdata.confd.resources | nindent 12 }}
          {{- end }}
          securityContext:
            allowPrivilegeEscalation: false
        {{- range $i := until (.Values.cortxdata.motr.numiosinst|int) }}
        - name: {{ printf "cortx-motr-io-%03d" (add 1 $i) }}
          image: {{ $.Values.cortxdata.image }}
          imagePullPolicy: IfNotPresent
          env:
            - name: IO_INDEX
              value: {{ printf "%d" (add 1 $i) | quote }}
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          {{- if eq $.Values.cortxdata.image  "ghcr.io/seagate/centos:7" }}
          command: ["/bin/sleep", "3650d"]
          {{- else }}
          command:
            - /bin/sh
          args:
            - -c
            - /opt/seagate/cortx/motr/bin/motr_setup start --services ioservice --idx $IO_INDEX --config yaml:///etc/cortx/cluster.conf
          {{- end }}
          volumeDevices:
            {{- range $.Values.cortxdata.blockDevicePaths }}
            - name: {{ printf "block-%s" ( include "cortx_data.device_path.to_string" .device ) }}
              devicePath: {{ .device | quote }}
            {{- end }}
          volumeMounts:
            - name: {{ $.Values.cortxdata.cfgmap.volmountname }}
              mountPath: {{ $.Values.cortxdata.cfgmap.mountpath }}
            - name: {{ $.Values.cortxdata.sslcfgmap.volmountname }}
              mountPath: {{ $.Values.cortxdata.sslcfgmap.mountpath }}
            - name: data
              mountPath: {{ $.Values.cortxdata.localpathpvc.mountpath }}
          ports:
          - containerPort: {{ printf "%d" (add $i $.Values.cortxdata.motr.startportnum) }}
          {{- if $.Values.cortxdata.motr.resources }}
          resources: {{- toYaml $.Values.cortxdata.motr.resources | nindent 12 }}
          {{- end }}
          securityContext:
            allowPrivilegeEscalation: false
        {{- end }}
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: {{- toYaml .Values.cortxdata.localpathpvc.accessmodes | nindent 6 }}
      storageClassName: {{ .Values.cortxdata.localpathpvc.storageclass }}
      resources:
        requests:
          storage: {{ .Values.cortxdata.localpathpvc.requeststoragesize }}
  {{- range .Values.cortxdata.blockDevicePaths }}
  - metadata:
      name: {{ printf "block-%s" ( include "cortx_data.device_path.to_string" .device ) }}
    spec:
      accessModes: {{- toYaml $.Values.cortxdata.persistentStorage.accessModes | nindent 6 }}
      volumeMode: {{ $.Values.cortxdata.persistentStorage.volumeMode | quote }}
      storageClassName: {{ $.Values.cortxdata.storageClassName | quote }}
      resources:
        requests:
          storage: {{ .size | quote }}
      selector:
        matchLabels:
          cortx.io/device-path: {{ include "cortx_data.device_path.to_string" .device | quote }}
  {{- end }}
